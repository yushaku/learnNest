version: '3.5'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:8000
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    networks:
      - backend

  postgres:
    image: postgres:14.9-alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB_MAIN: ${DB_MAIN}
      POSTGRES_DB_TEST: ${DB_TEST}
    ports:
      - ${DB_PORT}:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - backend

  influxdb:
    image: influxdb:1.8
    networks:
      - k6
      - grafana
    ports:
      - '8086:8086'
    environment:
      - INFLUXDB_DB=k6

  grafana:
    image: grafana/grafana:8.5.21
    networks:
      - grafana
    ports:
      - '3000:3000'
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - ./dashboards:/var/lib/grafana/dashboards
      - .config/grafana-dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - .config/grafana-datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  k6:
    image: grafana/k6:latest
    networks:
      - k6
    ports:
      - '6565:6565'
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./test:/test

networks:
  backend:
  grafana:
  k6:

volumes:
  pg_data:
  node_modules:
